// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Simplified User model to reference Appwrite user
model User {
  id         String    @id @default(cuid())
  appwriteId String    @unique
  email      String    @unique
  name       String?
  monitors   Monitor[]
}

enum Status {
  UP
  DOWN
  PENDING
}

enum MonitorType {
  HTTP
  PING
}

model Monitor {
  id                  String      @id @default(cuid())
  name                String
  url                 String
  interval            Int // in seconds
  type                MonitorType @default(HTTP) // e.g., "HTTP", "HTTPS", "PING"
  lastCheck           DateTime?
  averageResponseTime Int? // in milliseconds
  totalChecks         Int         @default(0)
  status              Status      @default(PENDING)
  createdAt           DateTime    @default(now())
  updatedAt           DateTime    @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  checks Check[]

  @@index([userId])
}

model Check {
  id           String   @id @default(cuid())
  timestamp    DateTime @default(now())
  status       Status
  statusCode   Int?
  responseTime Int? // in milliseconds
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  monitorId String
  monitor   Monitor @relation(fields: [monitorId], references: [id], onDelete: Cascade)

  @@index([monitorId])
}
